{"version":3,"sources":["components/CategoryAdd.tsx","helpers/getGifs.tsx","components/GifGridItem.tsx","components/GifGrid.tsx","hooks/useFetchGifs.tsx","components/App.tsx","index.tsx"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","prevCategories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","App","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgCeA,EA5BV,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACJ,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,OAAO,GAAGC,SATC,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAACU,GAAD,OAAqBR,GAArB,mBAAoCQ,OAClDP,EAAc,MAKlB,UACI,4BAAID,IACJ,uBACIS,KAAK,OACLC,YAAY,iBACZC,MAAOX,EACPY,SAnBc,SAACR,GACvBH,EAAcG,EAAES,OAAOF,c,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAeD,EAAKE,KAAI,SAACC,GAAe,IAAD,EACzC,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCaLO,EAb2D,SAAC,GAIpE,IAHHH,EAGE,EAHFA,MACAV,EAEE,EAFFA,IAEE,EADFS,GAEA,OACI,sBAAKK,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCcDO,EAnBiC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAC/C,ECFwB,SAACA,GACzB,MAA0BhB,mBAAiB,CACvCuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACd,GAAD,OACnBY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGlB,CAACpB,IAEGqB,EDb2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKpB,IAEJoB,GACG,mBAAGJ,UAAU,mCAAb,wBAGJ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEW3Be,EAzBH,WACR,MAAoC1C,mBAAS,CACzC,cADJ,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,gCACI,+CACA,6IAIA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK4C,EAAWlB,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MChBlC4B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f0d276b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CategoryAdd: React.FC<{\r\n    setCategories: React.Dispatch<React.SetStateAction<string[]>>;\r\n}> = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((prevCategories) => [inputValue, ...prevCategories]);\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n            <p>{inputValue}</p>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search gifs...\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CategoryAdd;\r\n","import { IGif } from \"../types/interfaces\";\r\n\r\nexport const getGifs = async (category: string) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=12&api_key=9tZz18zrICejWt6wpb611gvClODDmpZM`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs: IGif[] = data.map((img: IGif) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n    return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem: React.FC<{ title: string; url: string; id: string }> = ({\r\n    title,\r\n    url,\r\n    id,\r\n}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { IGif } from \"../types/interfaces\";\r\n\r\nconst GifGrid: React.FC<{ category: string }> = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && (\r\n                <p className=\"animate__animated animate__flash\">Loading...</p>\r\n            )}\r\n\r\n            <div className=\"card-grid\">\r\n                {images.map((img: IGif) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { IState } from \"../types/interfaces\";\r\n\r\nexport const useFetchGifs = (category: string) => {\r\n    const [state, setState] = useState<IState>({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((img) =>\r\n            setState({\r\n                data: img,\r\n                loading: false,\r\n            })\r\n        );\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport CategoryAdd from \"./CategoryAdd\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst App = () => {\r\n    const [categories, setCategories] = useState([\r\n        \"One Punch\",\r\n        // \"Samurai X\",\r\n        // \"Dragon Ball\",\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Giphynder App</h2>\r\n            <p>\r\n                Simple Gif App developed with React(Typescript) only for\r\n                studying purposes, feel free to use it as you want.\r\n            </p>\r\n            <CategoryAdd setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}